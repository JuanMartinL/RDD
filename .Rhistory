# Looking at the histogram, searching for manipulating evidence
ggplot(data = BDD[(BDD$bac1 > 0.06 & BDD$bac1 < 0.09),]) +
geom_histogram(aes(bac1), binwidth = 0.0005) +
geom_vline(xintercept = 0.08, linetype = "dashed", color = "red")
# Looking at the histogram, searching for manipulating evidence
ggplot(data = BDD[(BDD$bac1 > 0.06 & BDD$bac1 < 0.09),]) +
geom_histogram(aes(bac1), binwidth = 0.0001) +
geom_vline(xintercept = 0.08, linetype = "dashed", color = "red")
# Looking at the histogram, searching for manipulating evidence
ggplot(data = BDD[(BDD$bac1 > 0.06 & BDD$bac1 < 0.09),]) +
geom_histogram(aes(bac1), binwidth = 0.0009) +
geom_vline(xintercept = 0.08, linetype = "dashed", color = "red")
# Looking at the histogram, searching for manipulating evidence
ggplot(data = BDD[(BDD$bac1 > 0.06 & BDD$bac1 < 0.09),]) +
geom_histogram(aes(bac1), binwidth = 0.001) +
geom_vline(xintercept = 0.08, linetype = "dashed", color = "red")
library(estimatr) # Robust LM
View(BDD)
reg1 <- lm_robust(BDD$recidivism ~ BDD$dbac1 + BDD$bac1 + BDD$bac1*BDD$dbac1 + BDD$aged + BDD$male BDD$white)
reg1 <- lm_robust(BDD$recidivism ~ BDD$dbac1 + BDD$bac1 + BDD$bac1*BDD$dbac1 + BDD$aged + BDD$male + BDD$white)
stargazer(reg1, type = "text")
summary(reg1)
stargazer(reg1, type = "text")
stargazer(reg1)
summary(reg1)
reg1 <- lm_robust(recidivism ~ dbac1 + bac1 + bac1*dbac1 + aged + male + white, data = BDD[(BDD$bac1 >= 0.075 & BDD$bac1 <= 0.85),])
summary(reg1)
reg1 <- lm_robust(recidivism ~ dbac1 + bac1 + aged + male + white, data = BDD[(BDD$bac1 >= 0.075 & BDD$bac1 <= 0.85),])
summary(reg1)
reg1 <- lm_robust(recidivism ~ dbac1 + bac1 + aged + male + white, data = BDD[(BDD$bac1 >= 0.075 & BDD$bac1 <= 0.85),])
summary(reg1)
reg1 <- lm_robust(recidivism ~ bac1 + aged + male + white, data = BDD[(BDD$bac1 >= 0.075 & BDD$bac1 <= 0.85),])
summary(reg1)
#------------------------------------
# 5. Recreate Table 2 but only white male, age and accident (acc) as dependent variables.
#------------------------------------
?lm_robust
reg1 <- lm_robust(recidivism ~ bac1 + aged + male + white, data = BDD[(BDD$bac1 >= 0.075 & BDD$bac1 <= 0.85),], clusters = 0.001)
reg1 <- lm_robust(recidivism ~ bac1 + aged + male + white, data = BDD[(BDD$bac1 >= 0.075 & BDD$bac1 <= 0.85),], clusters = BDD$bac1)
# Load the raw data into memory
read_data <- function(df)
{
full_path <- paste("https://raw.github.com/scunning1975/mixtape/master/",
df, sep = "")
df <- read_dta(full_path)
return(df)
}
lmb_data <- read_data("lmb-data.dta")
# Cleaning
rm(list=ls())
library(tidyverse)
library(haven)
library(estimatr)
# Load the raw data into memory
read_data <- function(df)
{
full_path <- paste("https://raw.github.com/scunning1975/mixtape/master/",
df, sep = "")
df <- read_dta(full_path)
return(df)
}
lmb_data <- read_data("lmb-data.dta")
View(lmb_data)
lmb_data$id
reg1 <- lm_robust(recidivism ~ bac1 + aged + male + white, data = BDD[(BDD$bac1 >= 0.075 & BDD$bac1 <= 0.85),], clusters = id)
rm(list=ls())
setwd("D:/Desktop/Universidad/15° Semestre/Causal Inference and Research Design/Assigments/Assignment 4/RDD")  # Setting the directory
library(stargazer);library(readxl);library(tidyverse);library(ggplot2)
library(rddensity) # McCray test
library(rdd)
library(estimatr) # Robust LM
BDD <- read.csv("Data/Input/hansen_dwi.csv",
sep = ",", stringsAsFactors = F)
BDD$dbac1 <- ifelse(BDD$bac1 >= 0.8, 1, 0)
# Looking some descriptive statistics
summary(BDD$bac1)
# McCray Sorting Test
#-----------------------------------
DCdensity(BDD$bac1, cutpoint = 0.08, htest = T)
## Looking other bin size
i = 1
for (bands in seq(0.01, 0.1, 0.01)){
print(i)
print(DCdensity(BDD$bac1, cutpoint = 0.08, htest = T, bw = bands, plot = F))
i = i + 1
}
# Local Polynomial Density Estimation
#-----------------------------------
density <- rddensity(BDD$bac1, c = 0.08)
density$test$p_jk
rdplotdensity(density, BDD$bac1)
# Looking at the histogram, searching for manipulating evidence
ggplot(data = BDD[(BDD$bac1 > 0.06 & BDD$bac1 < 0.09),]) +
geom_histogram(aes(bac1), binwidth = 0.001) +
geom_vline(xintercept = 0.08, linetype = "dashed", color = "red")
reg1 <- lm_robust(recidivism ~ bac1 + aged + male + white, data = BDD[(BDD$bac1 >= 0.075 & BDD$bac1 <= 0.85),], clusters = id)
reg1 <- lm_robust(recidivism ~ bac1 + aged + male + white, data = BDD[(BDD$bac1 >= 0.075 & BDD$bac1 <= 0.085),])
summary(reg1)
# Cleaning
rm(list=ls())
library(tidyverse)
library(haven)
library(estimatr)
# Load the raw data into memory
read_data <- function(df)
{
full_path <- paste("https://raw.github.com/scunning1975/mixtape/master/",
df, sep = "")
df <- read_dta(full_path)
return(df)
}
lmb_data <- read_data("lmb-data.dta")
lmb_data$id
lmb_subset <- lmb_data %>%
filter(lagdemvoteshare>.48 & lagdemvoteshare<.52)
lm_1 <- lm_robust(score ~ lagdemocrat, data = lmb_subset, clusters = id)
lm_2 <- lm_robust(score ~ democrat, data = lmb_subset, clusters = id)
lm_3 <- lm_robust(democrat ~ lagdemocrat, data = lmb_subset, clusters = id)
summary(lm_1)
summary(lm_2)
summary(lm_3)
lm_1 <- lm_robust(score ~ lagdemocrat, data = lmb_data, clusters = id)
lm_2 <- lm_robust(score ~ democrat, data = lmb_data, clusters = id)
lm_3 <- lm_robust(democrat ~ lagdemocrat, data = lmb_data, clusters = id)
summary(lm_1)
summary(lm_2)
summary(lm_3)
lmb_data <- lmb_data %>%
mutate(demvoteshare_c = demvoteshare - 0.5)
lm_1 <- lm_robust(score ~ lagdemocrat + demvoteshare_c, data = lmb_data, clusters = id)
lm_2 <- lm_robust(score ~ democrat + demvoteshare_c, data = lmb_data, clusters = id)
lm_3 <- lm_robust(democrat ~ lagdemocrat + demvoteshare_c, data = lmb_data, clusters = id)
summary(lm_1)
summary(lm_2)
summary(lm_3)
lm_1 <- lm_robust(score ~ lagdemocrat*demvoteshare_c,
data = lmb_data, clusters = id)
lm_2 <- lm_robust(score ~ democrat*demvoteshare_c,
data = lmb_data, clusters = id)
lm_3 <- lm_robust(democrat ~ lagdemocrat*demvoteshare_c,
data = lmb_data, clusters = id)
summary(lm_1)
summary(lm_2)
summary(lm_3)
lmb_data %>%
mutate(demvoteshare_sq = demvoteshare_c^2)
lm_1 <- lm_robust(score ~ lagdemocrat*demvoteshare_c + lagdemocrat*demvoteshare_sq,
data = lmb_data, clusters = id)
lm_2 <- lm_robust(score ~ democrat*demvoteshare_c + democrat*demvoteshare_sq,
data = lmb_data, clusters = id)
lm_3 <- lm_robust(democrat ~ lagdemocrat*demvoteshare_c + lagdemocrat*demvoteshare_sq,
data = lmb_data, clusters = id)
summary(lm_1)
summary(lm_2)
summary(lm_3)
lmb_data %>%
filter(demvoteshare > .45 & demvoteshare < .55) %>%
mutate(demvoteshare_sq = demvoteshare_c^2)
lm_1 <- lm_robust(score ~ lagdemocrat*demvoteshare_c + lagdemocrat*demvoteshare_sq,
data = lmb_data, clusters = id)
lm_2 <- lm_robust(score ~ democrat*demvoteshare_c + democrat*demvoteshare_sq,
data = lmb_data, clusters = id)
lm_3 <- lm_robust(democrat ~ lagdemocrat*demvoteshare_c + lagdemocrat*demvoteshare_sq,
data = lmb_data, clusters = id)
summary(lm_1)
summary(lm_2)
summary(lm_3)
#aggregating the data
categories <- lmb_data$lagdemvoteshare
demmeans <- split(lmb_data$score, cut(lmb_data$lagdemvoteshare, 100)) %>%
lapply(mean) %>%
unlist()
agg_lmb_data <- data.frame(score = demmeans, lagdemvoteshare = seq(0.01,1, by = 0.01))
#plotting
lmb_data <- lmb_data %>%
mutate(gg_group = case_when(lagdemvoteshare > 0.5 ~ 1, TRUE ~ 0))
ggplot(lmb_data, aes(lagdemvoteshare, score)) +
geom_point(aes(x = lagdemvoteshare, y = score), data = agg_lmb_data) +
stat_smooth(aes(lagdemvoteshare, score, group = gg_group), method = "lm",
formula = y ~ x + I(x^2)) +
xlim(0,1) + ylim(0,100) +
geom_vline(xintercept = 0.5)
ggplot(lmb_data, aes(lagdemvoteshare, score)) +
geom_point(aes(x = lagdemvoteshare, y = score), data = agg_lmb_data) +
stat_smooth(aes(lagdemvoteshare, score, group = gg_group), method = "loess") +
xlim(0,1) + ylim(0,100) +
geom_vline(xintercept = 0.5)
ggplot(lmb_data, aes(lagdemvoteshare, score)) +
geom_point(aes(x = lagdemvoteshare, y = score), data = agg_lmb_data) +
stat_smooth(aes(lagdemvoteshare, score, group = gg_group), method = "lm") +
xlim(0,1) + ylim(0,100) +
geom_vline(xintercept = 0.5)
library(tidyverse)
library(stats)
smooth_dem0 <- lmb_data %>%
filter(democrat == 0) %>%
select(score, demvoteshare)
smooth_dem0 <- as_tibble(ksmooth(smooth_dem0$demvoteshare, smooth_dem0$score,
kernel = "box", bandwidth = 0.1))
smooth_dem0
smooth_dem1 <- lmb_data %>%
filter(democrat == 1) %>%
select(score, demvoteshare) %>%
na.omit()
smooth_dem1 <- as_tibble(ksmooth(smooth_dem1$demvoteshare, smooth_dem1$score,
kernel = "box", bandwidth = 0.1))
ggplot() +
geom_smooth(aes(x, y), data = smooth_dem0) +
geom_smooth(aes(x, y), data = smooth_dem1) +
geom_vline(xintercept = 0.5)
library(tidyverse)
library(rdrobust)
rdr <- rdrobust(y = lmb_data$score,
x = lmb_data$demvoteshare, c = 0.5)
summary(rdr)
?rdrobust
rd1 <- rdrobust(y = aged,
x = recidivism, c = 0.5)
rd1 <- rdrobust(y = BDD$aged,
x = BDD$recidivism, c = 0.5)
rd1 <- rdrobust(y = BDD$aged,
x = BDD$recidivism, c = 0.08)
rm(list=ls())
setwd("D:/Desktop/Universidad/15° Semestre/Causal Inference and Research Design/Assigments/Assignment 4/RDD")  # Setting the directory
library(stargazer);library(readxl);library(tidyverse);library(ggplot2)
library(rddensity) # McCray test
library(rdd)
library(estimatr) # Robust LM
BDD <- read.csv("Data/Input/hansen_dwi.csv",
sep = ",", stringsAsFactors = F)
BDD$dbac1 <- ifelse(BDD$bac1 >= 0.8, 1, 0)
# Looking some descriptive statistics
summary(BDD$bac1)
# McCray Sorting Test
#-----------------------------------
DCdensity(BDD$bac1, cutpoint = 0.08, htest = T)
# Local Polynomial Density Estimation
#-----------------------------------
density <- rddensity(BDD$bac1, c = 0.08)
density$test$p_jk
rdplotdensity(density, BDD$bac1)
## Placebo test
i = 1
for (placebo in seq(0.04, 0.1, 0.01)) {
print(paste(i, "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"), quote = F)
print(rddensity(BDD$bac1, c = placebo, all = T)$test$p_jk)
i = i + 1
}
# Looking at the histogram, searching for manipulating evidence
ggplot(data = BDD[(BDD$bac1 > 0.06 & BDD$bac1 < 0.09),]) +
geom_histogram(aes(bac1), binwidth = 0.001) +
geom_vline(xintercept = 0.08, linetype = "dashed", color = "red")
reg1 <- lm_robust(recidivism ~ bac1 + aged + male + white, data = BDD[(BDD$bac1 >= 0.075 & BDD$bac1 <= 0.085),])
summary(reg1)
stargazer(reg1)
rd1 <- rdrobust(y = BDD$aged,
x = BDD$recidivism, c = 0.08)
summary(rdr)
summary(rd1)
rd1 <- rdrobust(y = BDD[c(BDD$bac1 >= 0.075 & BDD$bac1 <= 0.085),]$aged,
x = BDD[c(BDD$bac1 >= 0.075 & BDD$bac1 <= 0.085),]$recidivism, c = 0.08)
summary(rd1)
BDD[c(BDD$bac1 >= 0.075 & BDD$bac1 <= 0.085),]
rd1 <- rdrobust(y = BDD[c(BDD$bac1 >= 0.075 & BDD$bac1 <= 0.085),]$recidivism,
x = BDD[c(BDD$bac1 >= 0.075 & BDD$bac1 <= 0.085),]$aged, c = 0.08)
BDD[c(BDD$bac1 >= 0.075 & BDD$bac1 <= 0.085),]$recidivism
BDD[c(BDD$bac1 >= 0.075 & BDD$bac1 <= 0.085),]$aged
rd1 <- rdrobust(y = BDD[c(BDD$bac1 >= 0.075 & BDD$bac1 <= 0.085),]$recidivism,
x = BDD[c(BDD$bac1 >= 0.075 & BDD$bac1 <= 0.085),]$white, c = 0.08)
rd1 <- rdbwselect(y = BDD$recidivism,
x = BDD$bac1, c = 0.08, bwselect = 0.005)
rd1 <- rdrobust(y = BDD$recidivism,
x = BDD$bac1, c = 0.08)
BDD_poly <- BDD[]BDD[(BDD$bac1 >= 0.075 & BDD$bac1 <= 0.085),]
BDD_poly <- BDD[(BDD$bac1 >= 0.075 & BDD$bac1 <= 0.085),]
rd1 <- rdrobust(y = BDD_poly$recidivism,
x = BDD_poly$bac1, c = 0.08)
BDD_poly
rd1 <- rdrobust(y = BDD_poly$recidivism,
x = BDD_poly$bac1, c = 0.08)
lmb_data$score
rd1 <- rdrobust(y = BDD_poly$recidivism,
x = BDD_poly$bac1, c = 0.08)
rd1 <- rdrobust(y = BDD$dbac1,
x = BDD$male, c = 0.08)
BDD_poly <- BDD[(BDD$bac1 >= 0.075 & BDD$bac1 <= 0.085),]
rd1 <- rdrobust(y = BDD$dbac1,
x = BDD$male, c = 0.08)
rd1 <- rdrobust(y = BDD_poly$dbac1,
x = BDD_poly$male, c = 0.08)
BDD_poly <- BDD[(BDD$bac1 >= 0.075 & BDD$bac1 <= 0.085),]
BDD$dbac1
summary(BDD$bac1)
summary(BDD$dbac1)
rm(list=ls())
setwd("D:/Desktop/Universidad/15° Semestre/Causal Inference and Research Design/Assigments/Assignment 4/RDD")  # Setting the directory
library(stargazer);library(readxl);library(tidyverse);library(ggplot2)
library(rddensity) # McCray test
library(rdd)
library(estimatr) # Robust LM
BDD <- read.csv("Data/Input/hansen_dwi.csv",
sep = ",", stringsAsFactors = F)
BDD$dbac1 <- ifelse(BDD$bac1 >= 0.8, 1, 0)
BDD$dbac1 <- ifelse(BDD$bac1 >= 0.08, 1, 0)
# Looking some descriptive statistics
summary(BDD$bac1)
# McCray Sorting Test
#-----------------------------------
DCdensity(BDD$bac1, cutpoint = 0.08, htest = T)
reg1 <- lm_robust(recidivism ~ bac1 + aged + male + white, data = BDD[(BDD$bac1 >= 0.075 & BDD$bac1 <= 0.085),])
reg1 <- lm_robust(recidivism ~ bac1 + dbar1 + dbac1*bac1 + aged + male + white, data = BDD[(BDD$bac1 >= 0.075 & BDD$bac1 <= 0.085),])
reg1 <- lm_robust(recidivism ~ bac1 + dbac1 + dbac1*bac1 + aged + male + white, data = BDD[(BDD$bac1 >= 0.075 & BDD$bac1 <= 0.085),])
summary(reg1)
BDD_poly <- BDD[(BDD$bac1 >= 0.075 & BDD$bac1 <= 0.085),]
rd1 <- rdrobust(y = BDD_poly$dbac1,
x = BDD_poly$male, c = 0.08)
BDD_poly$dbac1
BDD_poly$male
rd1 <- rdrobust(y = BDD_poly$dbac1,
x = BDD_poly$male, c = 0.08)
reg1 <- lm_robust(recidivism ~ aged + male + white, data = BDD[(BDD$bac1 >= 0.075 & BDD$bac1 <= 0.085),])
summary(reg1)
ac1 + dbac1 + dbac1*bac1 +
reg1 <- lm_robust(recidivism ~ bac1 + dbac1 + dbac1*bac1 + aged + male + white, data = BDD[(BDD$bac1 >= 0.075 & BDD$bac1 <= 0.085),])
reg1 <- lm_robust(recidivism ~ bac1 + dbac1 + dbac1*bac1 + aged + male + white, data = BDD[(BDD$bac1 >= 0.075 & BDD$bac1 <= 0.085),])
summary(reg1)
BDD_poly <- BDD[(BDD$bac1 >= 0.075 & BDD$bac1 <= 0.085),]
rd1 <- rdrobust(y = BDD_poly$dbac1,
x = BDD_poly$male, c = 0.08)
rd1 <- rdrobust(y = BDD_poly$dbac1,
x = BDD_poly$aged, c = 0.08)
rd1 <- rdrobust(y = BDD_poly$dbac1,
x = BDD_poly$aged)
rd1 <- rdrobust(y = BDD_poly$dbac1,
x = BDD_poly$white)
rd1 <- rdrobust(y = BDD_poly$recidivism,
x = BDD_poly$white)
rd1 <- rdrobust(y = BDD_poly$recidivism,
x = BDD_poly$white, c = 0.08)
rd1 <- rdrobust(y = BDD_poly$recidivism,
x = BDD_poly$bac, c = 0.08)
rd1 <- rdrobust(y = BDD_poly$recidivism,
x = BDD_poly$bac, c = 0.08)
rd1 <- rdrobust(y = BDD_poly$recidivism,
x = BDD_poly$bac1, c = 0.08)
BDD_poly <- BDD[(BDD$bac1 >= 0.075 & BDD$bac1 <= 0.085),]
rd1 <- rdrobust(y = BDD_poly$recidivism,
x = BDD_poly$bac1, c = 0.08)
rd1 <- rdrobust(y = BDD$recidivism,
x = BDD$bac1, c = 0.08)
# Cleaning
rm(list=ls())
library(tidyverse)
library(haven)
library(estimatr)
# Load the raw data into memory
read_data <- function(df)
{
full_path <- paste("https://raw.github.com/scunning1975/mixtape/master/",
df, sep = "")
df <- read_dta(full_path)
return(df)
}
lmb_data <- read_data("lmb-data.dta")
lmb_data$id
lmb_subset <- lmb_data %>%
filter(lagdemvoteshare>.48 & lagdemvoteshare<.52)
lm_1 <- lm_robust(score ~ lagdemocrat, data = lmb_subset, clusters = id)
lm_2 <- lm_robust(score ~ democrat, data = lmb_subset, clusters = id)
lm_3 <- lm_robust(democrat ~ lagdemocrat, data = lmb_subset, clusters = id)
library(tidyverse)
library(stats)
smooth_dem0 <- lmb_data %>%
filter(democrat == 0) %>%
select(score, demvoteshare)
smooth_dem0 <- as_tibble(ksmooth(smooth_dem0$demvoteshare, smooth_dem0$score,
kernel = "box", bandwidth = 0.1))
smooth_dem1 <- lmb_data %>%
filter(democrat == 1) %>%
select(score, demvoteshare) %>%
na.omit()
smooth_dem1 <- as_tibble(ksmooth(smooth_dem1$demvoteshare, smooth_dem1$score,
kernel = "box", bandwidth = 0.1))
ggplot() +
geom_smooth(aes(x, y), data = smooth_dem0) +
geom_smooth(aes(x, y), data = smooth_dem1) +
geom_vline(xintercept = 0.5)
library(tidyverse)
library(rdrobust)
rdr <- rdrobust(y = lmb_data$score,
x = lmb_data$demvoteshare, c = 0.5)
summary(rdr)
lmb_data$score
rm(list=ls())
setwd("D:/Desktop/Universidad/15° Semestre/Causal Inference and Research Design/Assigments/Assignment 4/RDD")  # Setting the directory
library(stargazer);library(readxl);library(tidyverse);library(ggplot2)
library(rddensity) # McCray test
library(rdd)
library(estimatr) # Robust LM
BDD <- read.csv("Data/Input/hansen_dwi.csv",
sep = ",", stringsAsFactors = F)
BDD$dbac1 <- ifelse(BDD$bac1 >= 0.08, 1, 0)
smooth_dem0 <- BDD %>%
filter(dbac1 == 0) %>%
select(bac1, recidivism)
smooth_dem0 <- as_tibble(ksmooth(smooth_dem0$bac1, smooth_dem0$recidivism,
kernel = "box", bandwidth = 0.01))
smooth_dem1 <- BDD %>%
filter(dbac1 == 1) %>%
select(bac1, recidivism)
smooth_dem1 <- BDD %>%
filter(dbac1 == 1) %>%
select(bac1, recidivism)
smooth_dem1 <- as_tibble(ksmooth(smooth_dem1$bac1, smooth_dem1$recidivism,
kernel = "box", bandwidth = 0.01))
ggplot() +
geom_smooth(aes(x, y), data = smooth_dem0) +
geom_smooth(aes(x, y), data = smooth_dem1) +
geom_vline(xintercept = 0.5)
ggplot() +
geom_smooth(aes(x, y), data = smooth_dem0) +
geom_smooth(aes(x, y), data = smooth_dem1) +
geom_vline(xintercept = 0.08)
# Looking at the histogram, searching for manipulating evidence
ggplot(data = BDD[(BDD$bac1 > 0.06 & BDD$bac1 < 0.09),]) +
geom_histogram(aes(bac1), binwidth = 0.001) +
geom_vline(xintercept = 0.08, linetype = "dashed", color = "red")
# Local Polynomial Density Estimation
#-----------------------------------
density <- rddensity(BDD$bac1, c = 0.08)
rdplotdensity(density, BDD$bac1)
smooth_dem0 <- BDD %>%
filter(dbac1 == 0) %>%
select(bac1, recidivism)
smooth_dem0 <- as_tibble(ksmooth(smooth_dem0$recidivism, smooth_dem0$bac1,
kernel = "box", bandwidth = 0.01))
smooth_dem1 <- BDD %>%
filter(dbac1 == 1) %>%
select(bac1, recidivism)
smooth_dem1 <- as_tibble(ksmooth(smooth_dem1$recidivism, smooth_dem1$bac1,
kernel = "box", bandwidth = 0.01))
ggplot() +
geom_smooth(aes(x, y), data = smooth_dem0) +
geom_smooth(aes(x, y), data = smooth_dem1) +
geom_vline(xintercept = 0.08)
smooth_dem0 <- BDD %>%
filter(dbac1 == 0) %>%
select(bac1, recidivism)
smooth_dem0 <- as_tibble(ksmooth(smooth_dem0$bac1, smooth_dem0$recidivism,
kernel = "box", bandwidth = 0.01))
smooth_dem1 <- BDD %>%
filter(dbac1 == 1) %>%
select(bac1, recidivism)
smooth_dem1 <- as_tibble(ksmooth(smooth_dem1$bac1, smooth_dem1$recidivism,
kernel = "box", bandwidth = 0.01))
ggplot() +
geom_smooth(aes(x, y), data = smooth_dem0) +
geom_smooth(aes(x, y), data = smooth_dem1) +
geom_vline(xintercept = 0.08)
# Plotting the kernels
ggplot() +
geom_point(aes(bac1, recidivism), data = BDD) +
geom_smooth(aes(x, y), data = smooth_dem0) +
geom_smooth(aes(x, y), data = smooth_dem1) +
geom_vline(xintercept = 0.08)
# Plotting the kernels
ggplot() +
geom_point(aes(recidivism, bac1), data = BDD) +
geom_smooth(aes(x, y), data = smooth_dem0) +
geom_smooth(aes(x, y), data = smooth_dem1) +
geom_vline(xintercept = 0.08)
smooth_dem1
smooth_dem0
bac1
recidivism
# Plotting the kernels
ggplot() +
geom_smooth(aes(x, y), data = smooth_dem0) +
geom_smooth(aes(x, y), data = smooth_dem1) +
geom_vline(xintercept = 0.08)
# Plotting the kernels
ggplot() +
geom_smooth(aes(x, y), data = smooth_dem0) +
geom_smooth(aes(x, y), data = smooth_dem1) +
geom_vline(xintercept = 0.08) +
xlab("BAC") +
ylab("Recidivism")
rdplot(y = BDD$recidivism,
x = BDD$bac1, c = 0.08)
BDD_poly <- BDD[(BDD$bac1 >= 0.075 & BDD$bac1 <= 0.085),]
# Plotting it
rdplot(y = BDD_poly$recidivism,
x = BDD_poly$bac1, c = 0.08)
# Plotting it
rdplot(y = BDD_poly$recidivism,
x = BDD_poly$bac1, c = 0.08)
rd1 <- rdrobust(y = BDD$recidivism,
x = BDD$bac1, c = 0.08)
summary(rd1)
rd1 <- rdrobust(y = BDD$recidivism,
x = BDD$white, c = 0.08)
rd1 <- rdrobust(y = BDD$recidivism,
x = BDD$white)
rd1 <- rdrobust(y = BDD$recidivism,
x = BDD$white, c = 0)
rd1 <- rdrobust(y = BDD$recidivism,
x = BDD$white, c = 1)
BDD$white
rd1 <- rdrobust(y = BDD$recidivism,
x = BDD$white, c = 0.5)
rd2 <- rdrobust(y = BDD$recidivism,
x = BDD$white, c = 0.5)
